---
# tasks file for brew

- name: brew | Check if brew exists
  shell: type brew
  register: brew_exists
  failed_when: false

- name: brew | Install brew for Linux
  shell: |
    NONINTERACTIVE=true
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
    test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  environment: "{{ proxy_env }}"
  when:
    - ansible_system == "Linux"
    - brew_exists.rc != 0

- name: brew | Get brew prefix
  shell: /home/linuxbrew/.linuxbrew/bin/brew --prefix
  register: brew_prefix
  when:
    - ansible_system == "Linux"

- name: brew | Check if bash exists
  shell: type bash
  register: bash_exists
  failed_when: false
  when:
    - ansible_system == "Linux"

- name: brew | Set env for brew to profile
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.profile"
    block: |
      eval "$({{ brew_prefix.stdout }}/bin/brew shellenv)"
    marker: "#{mark} ANSIBLE MANAGED BLOCK - homebrew"
  when:
    - ansible_system == "Linux"

- name: brew | Check if .bash_profile exists
  stat:
    path: "{{ ansible_env.HOME }}/.bash_profile"
  register: bash_profile_exists

- name: brew | Set env for brew to .bash_profile
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.bash_profile"
    block: |
      eval "$({{ brew_prefix.stdout }}/bin/brew shellenv)"
    marker: "#{mark} ANSIBLE MANAGED BLOCK - homebrew"
  when:
    - ansible_system == "Linux"
    - bash_exists.rc == 0
    - bash_profile_exists.stat.exists

- name: brew | Re-tap brew
  shell: |
    source "{{ ansible_env.HOME }}"/.profile
    rm -rf "/home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/homebrew/homebrew-core"
    brew tap homebrew/core
  when:
    - ansible_system == "Linux"
    - brew_exists.rc != 0
