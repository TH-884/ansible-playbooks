---
# tasks file for starship

- name: starship | Set environment variables for rust
  shell: "source {{ ansible_env.HOME }}/.profile"
  when:
    - ansible_system == "Linux"
  become: no
  
- name: starship | Install Starship using cargo
  shell: cargo install starship --locked
  environment: "{{ proxy_env }}"

- name: starship | Check if bash exists
  shell: which bash
  register: bash_exists
  ignore_errors: yes
  when:
    - ansible_system == "Linux"

- name: starship | Add the bootstrap code for starship
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    block: |
      eval "$(starship init bash)"
    marker: "#{mark} ANSIBLE MANAGED BLOCK - starship"
  become: no
  when:
    - ansible_system == "Linux"
    - bash_exists.stdout != ""

- name: starship | Check if PowerShell exists
  shell: which bash
  register: pwsh_exists 
  ignore_errors: yes
  when:
    - ansible_system == "Linux"

- name: starship | Add the bootstrap code for PowerShell
  blockinfile:
    path: "{{ ansible_env.HOME }}/.config/powershell/Microsoft.PowerShell_profile.ps1"
    block: |
      Invoke-Expression (&starship init powershell)
    marker: "#{mark} ANSIBLE MANAGED BLOCK - starship"
  become: no
  when:
    - ansible_system == "Linux"
    - pwsh_exists.stdout == ""
  
- name: starship | Copy config file
  file:
    src: "{{ role_path }}/files/starship.toml"
    dest: "{{ ansible_env.HOME }}/.config/starship.toml"
    force: yes
    state: hard
  become: no
  when:
    - ansible_system == "Linux"
